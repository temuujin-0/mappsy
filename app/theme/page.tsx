"use client";

import React, { useRef } from 'react'; // useRef-–∏–π–≥ –∏–º–ø–æ—Ä—Ç–ª–æ–Ω–æ
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Checkbox } from "@/components/ui/checkbox";
import { Switch } from "@/components/ui/switch";
import {
    Tabs,
    TabsList,
    TabsTrigger,
    TabsContent,
} from "@/components/ui/tabs";
import {
    Card,
    CardContent,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Calendar } from "@/components/ui/calendar";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
import { format } from "date-fns";
import { useState } from "react";
import {
    Dialog,
    DialogTrigger,
    DialogContent,
    DialogHeader,
    DialogTitle,
    DialogDescription, // –≠–Ω–∏–π–≥ –∑–∞–∞–≤–∞–ª –∏–º–ø–æ—Ä—Ç–ª–æ–æ—Ä–æ–π!
    DialogFooter,
    DialogClose,
} from "@/components/ui/dialog"; 
import {
    Drawer,
    DrawerTrigger,
    DrawerContent,
    DrawerHeader,
    DrawerTitle,
    DrawerDescription, // –≠–Ω–∏–π–≥ –∑–∞–∞–≤–∞–ª –∏–º–ø–æ—Ä—Ç–ª–æ–æ—Ä–æ–π
    DrawerFooter,
    DrawerClose,
} from "@/components/ui/drawer";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Image as LucideImage, Calendar as CalendarIcon, ArrowRight } from "lucide-react";
import { ThemeToggle } from "@/components/common/ThemeToggle";

import { DateRange } from "react-day-picker";
import { DataTable } from "@/components/DataTable";
import { SingleSelect } from "@/components/SingleSelect";
import { MultiSelect } from "@/components/MultiSelect";
import { Forms, FormsField } from "@/components/Forms";

interface CityOption {
    value: string;
    label: string;
}

const cities: CityOption[] = [
    { value: "ulaanbaatar", label: "–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä" },
    { value: "darkhan", label: "–î–∞—Ä—Ö–∞–Ω" },
    { value: "erdenet", label: "–≠—Ä–¥—ç–Ω—ç—Ç" },
    { value: "choibalsan", label: "–ß–æ–π–±–∞–ª—Å–∞–Ω" },
    { value: "hovd", label: "–•–æ–≤–¥" },
];

interface LanguageOption {
    value: string;
    label: string;
    disabled?: boolean;
}

const languages: LanguageOption[] = [
    { value: "mn", label: "–ú–æ–Ω–≥–æ–ª" },
    { value: "en", label: "–ê–Ω–≥–ª–∏" },
    { value: "kr", label: "–°–æ–ª–æ–Ω–≥–æ—Å" },
    { value: "jp", label: "–Ø–ø–æ–Ω" },
    { value: "cn", label: "–•—è—Ç–∞–¥" },
    { value: "ru", label: "–û—Ä–æ—Å" },
    { value: "de", label: "–ì–µ—Ä–º–∞–Ω", disabled: true },
];

interface UserData {
    firstName: string;
    lastName: string;
    email: string;
    age: number;
    gender: string;
    bio: string;
    acceptTerms: boolean;
    registrationDate: string; // YYYY-MM-DD —Ñ–æ—Ä–º–∞—Ç—Ç–∞–π string
    enrollmentPeriod?: { // rangeDate-–∏–π–Ω –∂–∏—à—ç—ç
        from?: string;
        to?: string;
    };
    profilePicture?: FileList; // –ù—ç–≥ —Ñ–∞–π–ª —ç—Å–≤—ç–ª –æ–ª–æ–Ω —Ñ–∞–π–ª –±–∞–π–∂ –±–æ–ª–Ω–æ
    attachments?: FileList;    // –û–ª–æ–Ω —Ñ–∞–π–ª –±–∞–π–∂ –±–æ–ª–Ω–æ
}

export default function ThemePreviewPage() {
    const [singleDate, setSingleDate] = useState<Date | undefined>(undefined);
    const [multipleDates, setMultipleDates] = useState<Date[]>([]);
    const [selectedLanguages, setSelectedLanguages] = useState<string[]>([]);
    const [range, setRange] = useState<DateRange | undefined>(undefined);
    
    const [selectedCity, setSelectedCity] = useState<string | undefined>(undefined);
    const firstInputRef = useRef<HTMLInputElement>(null); // Drawer –¥–æ—Ç–æ—Ä—Ö –∞–Ω—Ö–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–∏–π–Ω ref
    const emailRef = React.useRef<HTMLInputElement>(null); // –î–∏–∞–ª–æ–≥ –Ω—ç—ç–≥–¥—ç—Ö “Ø–µ–¥ —Ñ–æ–∫—É—Å–ª–∞—Ö —ç–ª–µ–º–µ–Ω—Ç

    const userFormFields: FormsField[] = [
        {
            name: 'firstName',
            label: '–ù—ç—Ä',
            type: 'text',
            // required: true,
            className: 'col-span-12 md:col-span-6', // –•–∞–≥–∞—Å –±–∞–≥–∞–Ω–∞
        },
        {
            name: 'lastName',
            label: '–û–≤–æ–≥',
            type: 'text',
            // required: true,
            className: 'col-span-12 md:col-span-6', // –•–∞–≥–∞—Å –±–∞–≥–∞–Ω–∞
        },
        {
            name: 'email',
            label: '–ò–º—ç–π–ª',
            type: 'email',
            // required: true,
            className: 'col-span-12',
        },
        {
            name: 'password',
            label: '–Ω—É—É—Ü “Ø–≥',
            type: 'password',
            // required: true,
            className: 'col-span-12',
        },
        {
            name: 'link',
            label: 'URL',
            type: 'link',
            // required: true,
            className: 'col-span-12',
        },
        {
            name: 'age',
            label: '–ù–∞—Å',
            type: 'number',
            // required: true,
            className: 'col-span-12 md:col-span-4',
            // Number type-–¥ min/max-–∏–π–≥ FormsField-—ç—ç—Å —Ö–∞—Å—Å–∞–Ω —Ç—É–ª —ç–Ω–¥ –±–∞–π—Ö–≥“Ø–π.
            // –•–∞—Ä–∏–Ω Zod schema –¥–æ—Ç–æ—Ä —à–∞–ª–≥–∞–ª—Ç —Ö–∏–π–≥–¥—ç–Ω—ç.
        },
        {
            name: 'gender',
            label: '–•“Ø–π—Å',
            type: 'select',
            // required: true,
            options: [
                { value: 'male', label: '–≠—Ä—ç–≥—Ç—ç–π' },
                { value: 'female', label: '–≠–º—ç–≥—Ç—ç–π' },
                { value: 'other', label: '–ë—É—Å–∞–¥' },
            ],
            className: 'col-span-12 md:col-span-8',
        },
        {
            name: 'multiGender',
            label: '–•“Ø–π—Å –ú—É–ª—Ç–∏',
            type: 'multiSelect',
            // required: true,
            options: [
                { value: 'male', label: '–≠—Ä—ç–≥—Ç—ç–π' },
                { value: 'female', label: '–≠–º—ç–≥—Ç—ç–π' },
                { value: 'other', label: '–ë—É—Å–∞–¥' },
            ],
            className: 'col-span-12 md:col-span-8',
        },
        {
            name: 'bio',
            label: '”®”©—Ä–∏–π–Ω —Ç—É—Ö–∞–π',
            type: 'textarea',
            required: false, // –ó–∞–∞–≤–∞–ª –±–∏—à
            className: 'col-span-12',
        },
        {
            name: 'registrationDate',
            label: '–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—Å—ç–Ω –æ–≥–Ω–æ–æ',
            type: 'date',
            // required: true,
            className: 'col-span-12 md:col-span-6',
        },
        {
            name: 'enrollmentPeriod',
            label: '–ë“Ø—Ä—Ç–≥—ç–ª–∏–π–Ω —Ö—É–≥–∞—Ü–∞–∞',
            type: 'rangeDate',
            required: false,
            className: 'col-span-12 md:col-span-6',
            // isVisible: (formData) => formData.registrationDate && new Date(formData.registrationDate).getFullYear() > 2020,
            // description: '–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—Å—ç–Ω –æ–≥–Ω–æ–æ 2020 –æ–Ω–æ–æ—Å —Ö–æ–π—à –±–æ–ª –≥–∞—Ä—á –∏—Ä–Ω—ç.',
        },
        {
            name: 'acceptTerms',
            label: '“Æ–π–ª—á–∏–ª–≥—ç—ç–Ω–∏–π –Ω”©—Ö—Ü”©–ª–∏–π–≥ –∑”©–≤—à”©”©—Ä”©—Ö',
            type: 'checkbox',
            // required: true,
            className: 'col-span-12',
        },
        {
            name: 'profilePicture',
            label: '–ü—Ä–æ—Ñ–∞–π–ª –∑—É—Ä–∞–≥',
            type: 'file',
            required: false, // –ó–∞–∞–≤–∞–ª –∑—É—Ä–∞–≥ –æ—Ä—É—É–ª–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π
            className: 'col-span-12 md:col-span-6',
            accept: 'image/*', // –ó”©–≤—Ö”©–Ω –∑—É—Ä–∞–≥ –æ—Ä—É—É–ª–Ω–∞
            multiple: false, // –ù—ç–≥ –∑—É—Ä–∞–≥ –ª –æ—Ä—É—É–ª–Ω–∞
        },
        {
            name: 'attachments',
            label: '–•–∞–≤—Å—Ä–∞–ª—Ç —Ñ–∞–π–ª—É—É–¥',
            type: 'file',
            required: false,
            className: 'col-span-12 md:col-span-6',
            accept: '.pdf,.doc,.docx', // –ó”©–≤—Ö”©–Ω PDF, Word –æ—Ä—É—É–ª–Ω–∞
            multiple: true, // –û–ª–æ–Ω —Ñ–∞–π–ª –æ—Ä—É—É–ª–Ω–∞
        },
    ];

    const initialUserData: UserData = {
        firstName: '–ê—Ä–∏—É–Ω–±–∞–∞—Ç–∞—Ä',
        lastName: '–ì–∞–Ω–±–∞—Ç',
        email: 'ariunbaatar@example.com',
        age: 30,
        gender: 'male',
        bio: '–í–µ–± —Ö”©–≥–∂“Ø“Ø–ª—ç–≥—á',
        acceptTerms: false,
        registrationDate: '2023-01-15',
        enrollmentPeriod: {
            from: '2023-09-01',
            to: '2024-05-31',
        },
    };

    const handleSubmit = (data: Record<string, any>) => {
        console.log("–§–æ—Ä–º –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç:", data);
        // toast({
        // title: "–§–æ—Ä–º –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!",
        // description: JSON.stringify(data, null, 2),
        // });
    };

    const handleCancel = () => {
        console.log("–§–æ—Ä–º —Ü—É—Ü–ª–∞–≥–¥–ª–∞–∞.")
        // toast({
        // title: "–§–æ—Ä–º —Ü—É—Ü–ª–∞–≥–¥–ª–∞–∞.",
        // description: "–¢–∞–Ω—ã –æ—Ä—É—É–ª—Å–∞–Ω –º—ç–¥—ç—ç–ª—ç–ª —Ö–∞–¥–≥–∞–ª–∞–≥–¥–∞–∞–≥“Ø–π.",
        // variant: "destructive",
        // });
    };

    const columns = [
        {
            title: "–ù—ç—Ä",
            key: "name",
            sort: true,
        },
        {
            title: "–ù–∞—Å",
            key: "age",
            sort: true,
        },
        {
            title: "“Æ–π–ª–¥—ç–ª",
            key: "action",
            render: () => (
                <button className="text-blue-600 hover:underline">–ó–∞—Å–∞—Ö</button>
            ),
        },
    ]

    const data = [
        { name: "–ë–∞—Ç", age: 25 },
        { name: "–°–∞—Ä–∞–∞", age: 28 },
        { name: "–ú”©–Ω—Ö", age: 30 },
        { name: "–¢—É—è–∞", age: 24 },
        { name: "–ì–∞–Ω–∞–∞", age: 27 },
    ]

    return (
        <Card className="p-6 m-6 mt-16 space-y-10">
            <h1>üé® Theme</h1>

            <section className="">
                <h2 className="text-xl font-semibold mb-2">üåó –°—ç–¥—ç–≤ —Å–æ–ª–∏—Ö</h2>
                <ThemeToggle />
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üî§ Inputs</h2>
                <div className="grid gap-4 md:grid-cols-2">
                    <div className="flex flex-col gap-2"><Label>–¢–µ–∫—Å—Ç</Label><Input type="text" placeholder="–¢–µ–∫—Å—Ç –æ—Ä—É—É–ª–Ω–∞ —É—É" /></div>
                    <div className="flex flex-col gap-2"><Label>–ò-–º—ç–π–ª</Label><Input type="email" placeholder="example@mail.com" /></div>
                    <div className="flex flex-col gap-2"><Label>–ù—É—É—Ü “Ø–≥</Label><Input type="password" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" /></div>
                    <div className="flex flex-col gap-2"><Label>–£—Ç–∞—Å</Label><Input type="tel" placeholder="+976 xxxx xxxx" /></div>
                    <div className="flex flex-col gap-2"><Label>–¢–æ–æ–Ω —É—Ç–≥–∞</Label><Input type="number" placeholder="123" /></div>
                    <div className="flex flex-col gap-2"><Label>URL</Label><Input type="url" placeholder="https://" /></div>
                    <div className="flex flex-col gap-2"><Label>–§–∞–π–ª</Label><Input type="file" /></div>
                </div>
            </section>
            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üî§ Form</h2>
                <Forms
                    fields={userFormFields}
                    // selectedData={initialUserData}
                    onSubmit={handleSubmit}
                    onCancel={handleCancel}
                    submitButtonText="–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—ç—Ö"
                    cancelButtonText="–ë–æ–ª–∏—Ö"
                />
            </section>

            <div className="p-6 space-y-10">
                <h1 className="text-2xl font-bold">üìÖ Calendar —Ç”©—Ä–ª“Ø“Ø–¥</h1>

                {/* Single */}
                <section className="space-y-4">
                    <Label>üü¢ Single –æ–≥–Ω–æ–æ —Å–æ–Ω–≥–æ–ª—Ç</Label>
                    <Calendar
                        mode="single"
                        selected={singleDate}
                        onSelect={setSingleDate}
                        className="border rounded-md"
                    />
                </section>

                {/* Multiple */}
                <section className="space-y-4">
                    <Label>üü° Multiple –æ–≥–Ω–æ–æ —Å–æ–Ω–≥–æ–ª—Ç</Label>
                    <Calendar
                        mode="multiple"
                        selected={multipleDates}
                        onSelect={(dates) => setMultipleDates(dates ?? [])}
                        className="border rounded-md"
                    />
                </section>

                {/* Range */}
                <section className="space-y-4">
                    <Label>üîµ –û–≥–Ω–æ–æ–Ω—ã Range —Å–æ–Ω–≥–æ–ª—Ç</Label>
                    <Calendar
                        mode="range"
                        selected={range}
                        onSelect={(val) => setRange(val)}
                        numberOfMonths={2}
                        className="border rounded-md"
                    />
                </section>

                {/* Popover - single */}
                <section className="space-y-4">
                    <Label>üìÜ Popover —Ö—ç–ª–±—ç—Ä—ç—ç—Ä Single Calendar</Label>
                    <Popover>
                    <PopoverTrigger asChild>
                        <Button variant="outline" className="w-[250px] justify-start text-left font-normal">
                        <CalendarIcon className="mr-2 h-4 w-4" />
                        {singleDate ? format(singleDate, "PPP") : <span>–û–≥–Ω–æ–æ —Å–æ–Ω–≥–æ—Ö</span>}
                        </Button>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                        <Calendar mode="single" selected={singleDate} onSelect={setSingleDate} initialFocus />
                    </PopoverContent>
                    </Popover>
                </section>

                {/* Popover - range */}
                <section className="space-y-4">
                    <Label>üìÖ Popover Range Date Picker</Label>
                    <Popover>
                    <PopoverTrigger asChild>
                        <Button variant="outline" className="w-[300px] justify-start text-left font-normal">
                        <CalendarIcon className="mr-2 h-4 w-4" />
                        {range?.from ? (
                            range.to ? (
                            <>
                                {format(range.from, "yyyy-MM-dd")} <ArrowRight/> {format(range.to, "yyyy-MM-dd")}
                            </>
                            ) : (
                            format(range.from, "yyyy-MM-dd")
                            )
                        ) : (
                            <span>–•—É–≥–∞—Ü–∞–∞–Ω—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–æ–Ω–≥–æ–Ω–æ —É—É</span>
                        )}
                        </Button>
                    </PopoverTrigger>
                    <PopoverContent className="w-auto p-0" align="start">
                        <Calendar
                            mode="range"
                            selected={range}
                            onSelect={(val) => setRange(val)}
                            numberOfMonths={2}
                            initialFocus
                        />
                    </PopoverContent>
                    </Popover>
                </section>
            </div>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">–¢–æ–≤—á–ª—É—É—Ä</h2>
                <div className="flex items-center gap-2">
                    <Button>–≠–Ω–≥–∏–π–Ω</Button>
                    <Button variant="outline">–•“Ø—Ä—ç—ç—Ç—ç–π</Button>
                    <Button variant="destructive">–£—Å—Ç–≥–∞—Ö</Button>
                    <Button disabled>–ò–¥—ç–≤—Ö–≥“Ø–π</Button>
                    <Button>
                    <span className="animate-spin mr-2 h-4 w-4 border-2 border-white border-t-transparent rounded-full" />
                        –£–Ω—à–∏–∂ –±–∞–π–Ω–∞...
                    </Button>
                </div>
            </section>
            <section className="space-y-4">
                <h2 className="text-xl font-semibold"> Slide (Carousel)</h2>
                <div className="overflow-x-auto whitespace-nowrap space-x-4 flex">
                    <div className="w-60 h-32 bg-gray-300 inline-block">Slide 1</div>
                    <div className="w-60 h-32 bg-gray-400 inline-block">Slide 2</div>
                    <div className="w-60 h-32 bg-gray-500 inline-block">Slide 3</div>
                </div>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üßæ –¢–µ–∫—Å—Ç —Ç–∞–ª–±–∞—Ä</h2>
                <Textarea placeholder="–¢–∞–π–ª–±–∞—Ä –±–∏—á–Ω—ç “Ø“Ø..." />
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">‚úÖ –ß–µ–∫–±–æ–∫—Å, –£–Ω—Ç—Ä–∞–∞–ª–≥–∞</h2>
                <div className="flex items-center gap-4">
                <Checkbox id="terms" /> <Label htmlFor="terms">–ù”©—Ö—Ü”©–ª –∑”©–≤—à”©”©—Ä”©—Ö</Label>
                <Switch /> <Label>–ì–æ—Ä–∏–º —Å–æ–ª–∏—Ö</Label>
                </div>
            </section>

            <section className="space-y-4">
                <div>
                    <h2 className="text-xl font-semibold">üì¶ –°–æ–Ω–≥–æ–ª—Ç (Select)</h2>
                    {/* <Select>
                    <SelectTrigger className="w-[200px]">
                        <SelectValue placeholder="–°–æ–Ω–≥–æ–ª—Ç —Ö–∏–π–Ω—ç “Ø“Ø" />
                    </SelectTrigger>
                    <SelectContent>
                        <SelectItem value="one">–ù—ç–≥</SelectItem>
                        <SelectItem value="two">–•–æ—ë—Ä</SelectItem>
                        <SelectItem value="three">–ì—É—Ä–∞–≤</SelectItem>
                    </SelectContent>
                    </Select> */}
                    <SingleSelect
                        options={cities}
                        value={selectedCity}
                        onChange={setSelectedCity}
                        placeholder="–•–æ—Ç —Å–æ–Ω–≥–æ–Ω–æ —É—É"
                        isClearable
                        isSearchable
                    />
                </div>
                <div>
                    <h2 className="text-xl font-semibold mb-4">–•—ç–ª–Ω–∏–π —Å–æ–Ω–≥–æ–ª—Ç</h2>
                    <MultiSelect
                        options={languages}
                        value={selectedLanguages}
                        onChange={setSelectedLanguages}
                        placeholder="–•—ç–ª —Å–æ–Ω–≥–æ–Ω–æ —É—É"
                        isSearchable={true}
                        clearAllLabel="–ë“Ø—Ö —Ö—ç–ª–∏–π–≥ —Ü—ç–≤—ç—Ä–ª—ç—Ö"
                    />
                </div>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üìÅ Tabs</h2>
                <Tabs defaultValue="info">
                <TabsList>
                    <TabsTrigger value="info">–ú—ç–¥—ç—ç–ª—ç–ª</TabsTrigger>
                    <TabsTrigger value="settings">–¢–æ—Ö–∏—Ä–≥–æ–æ</TabsTrigger>
                </TabsList>
                <TabsContent value="info">–•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª</TabsContent>
                <TabsContent value="settings">–¢–æ—Ö–∏—Ä–≥–æ–æ–Ω—ã —Ö—ç—Å—ç–≥</TabsContent>
                </Tabs>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üßæ –ö–∞—Ä—Ç</h2>
                <Card className="max-w-sm">
                <CardHeader><CardTitle>–ì–∞—Ä—á–∏–≥</CardTitle></CardHeader>
                <CardContent><p>–ö–∞—Ä—Ç—ã–Ω –∂–∏—à—ç—ç —Ç–∞–π–ª–±–∞—Ä</p></CardContent>
                </Card>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üßç –ê–≤–∞—Ç–∞—Ä</h2>
                <Avatar>
                    <AvatarImage src="https://github.com/shadcn.png" alt="Avatar" />
                    <AvatarFallback>–ê–ë</AvatarFallback>
                </Avatar>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üñºÔ∏è –ó—É—Ä–∞–≥</h2>
                <LucideImage className="w-8 h-8" />
                <img src="https://placehold.co/150x150" alt="–ñ–∏—à—ç—ç –∑—É—Ä–∞–≥" className="rounded-md border" />
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üìÑ Paginated Table</h2>

                <DataTable columns={columns} data={data} pageSize={3} />
            </section>
            
            <section className="space-y-4">
                <h2 className="text-xl font-semibold">ü™ü Modal & Drawer</h2>
                <Dialog>
                    <DialogTrigger asChild>
                        {/* –≠–Ω—ç —Ç–æ–≤—á–∏–π–≥ –¥–∞—Ä–∞—Ö–∞–¥ Dialog –Ω—ç—ç–≥–¥—ç–Ω—ç. */}
                        <Button variant="outline">–î–∏–∞–ª–æ–≥ –Ω—ç—ç—Ö</Button>
                    </DialogTrigger>

                    <DialogContent
                        // –î–∏–∞–ª–æ–≥ –Ω—ç—ç–≥–¥—ç—Ö “Ø–µ–¥ —Ö–∏–π—Ö “Ø–π–ª–¥–ª“Ø“Ø–¥ (—Ñ–æ–∫—É—Å —à–∏–ª–∂“Ø“Ø–ª—ç—Ö)
                        onOpenAutoFocus={(event) => {
                        event.preventDefault(); // –ê–≤—Ç–æ–º–∞—Ç —Ñ–æ–∫—É—Å —à–∏–ª–∂–∏–ª—Ç–∏–π–≥ –∑–æ–≥—Å–æ–æ–Ω–æ
                        emailRef.current?.focus(); // –ú–∞–Ω–∞–π email input —Ä—É—É —Ñ–æ–∫—É—Å—ã–≥ —à–∏–ª–∂“Ø“Ø–ª–Ω—ç
                        }}
                        // –î–∏–∞–ª–æ–≥ —Ö–∞–∞–≥–¥–∞—Ö “Ø–µ–¥ —Ñ–æ–∫—É—Å—ã–≥ –±—É—Ü–∞–∞—Ö (–∞–Ω—Ö–¥–∞–≥—á–∞–∞—Ä –Ω—ç—ç—Å—ç–Ω —ç–ª–µ–º–µ–Ω—Ç —Ä“Ø“Ø –±—É—Ü–∞–∞–Ω–∞)
                        // –•—ç—Ä—ç–≤ ”©”©—Ä –≥–∞–∑–∞—Ä —Ä—É—É —à–∏–ª–∂“Ø“Ø–ª—ç—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π –±–æ–ª —ç–Ω—ç –ø—Ä–æ–ø—ã–≥ –Ω—ç–º—ç—Ö–≥“Ø–π –±–∞–π–∂ –±–æ–ª–Ω–æ.
                        // onCloseAutoFocus={(event) => {
                        //   // event.preventDefault(); // –ê–Ω—Ö–¥–∞–≥—á —Ñ–æ–∫—É—Å –±—É—Ü–∞–∞–ª—Ç—ã–≥ –∑–æ–≥—Å–æ–æ–Ω–æ
                        //   // drawerTriggerRef.current?.focus(); // –•“Ø—Å—Å—ç–Ω —ç–ª–µ–º–µ–Ω—Ç —Ä“Ø“Ø —Ñ–æ–∫—É—Å—ã–≥ –±—É—Ü–∞–∞–Ω–∞
                        // }}
                    >
                        <DialogHeader>
                        {/* –î–∏–∞–ª–æ–≥–∏–π–Ω –≥–∞—Ä—á–∏–≥ - –≠–Ω—ç –Ω—å Radix-–∏–π–Ω Title –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã–≥ –∞—à–∏–≥–ª–∞–∂ –±–∞–π–Ω–∞ */}
                        <DialogTitle>–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—ç—Ö</DialogTitle>
                        {/* –î–∏–∞–ª–æ–≥–∏–π–Ω —Ç–∞–π–ª–±–∞—Ä - –≠–Ω—ç –Ω—å Radix-–∏–π–Ω Description –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã–≥ –∞—à–∏–≥–ª–∞–∂ –±–∞–π–Ω–∞ */}
                        {/* –≠–Ω—ç –Ω—å "Missing Description" –∞–Ω—Ö–∞–∞—Ä—É—É–ª–≥—ã–≥ —à–∏–π–¥–Ω—ç. */}
                        <DialogDescription>
                            –ú–∞–Ω–∞–π “Ø–π–ª—á–∏–ª–≥—ç—ç–Ω–¥ –Ω—ç–≥–¥—ç—Ö–∏–π–Ω —Ç—É–ª–¥ –∏–º—ç–π–ª —Ö–∞—è–≥–∞–∞ –æ—Ä—É—É–ª–Ω–∞ —É—É.
                        </DialogDescription>
                        </DialogHeader>

                        <div className="grid gap-4 py-4">
                        <div className="grid grid-cols-4 items-center gap-4">
                            <label htmlFor="email" className="text-right">
                            –ò–º—ç–π–ª
                            </label>
                            <Input
                            id="email"
                            defaultValue="user@example.com"
                            className="col-span-3"
                            ref={emailRef} // –≠–Ω—ç input —Ä—É—É —Ñ–æ–∫—É—Å —à–∏–ª–∂“Ø“Ø–ª—ç—Ö–∏–π–Ω —Ç—É–ª–¥ ref-–∏–π–≥ –Ω—ç–º–Ω—ç
                            />
                        </div>
                        {/* –ù—ç–º—ç–ª—Ç —Ñ–æ—Ä–º —ç—Å–≤—ç–ª –±—É—Å–∞–¥ –∞–≥—É—É–ª–≥–∞ */}
                        </div>

                        <DialogFooter>
                        <Button type="submit">–ë“Ø—Ä—Ç–≥“Ø“Ø–ª—ç—Ö</Button>
                        {/* DialogClose –Ω—å Dialog-–∏–π–≥ —Ö–∞–∞—Ö–∞–¥ –∞—à–∏–≥–ª–∞–≥–¥–∞–Ω–∞ */}
                        <DialogClose asChild>
                            <Button variant="secondary">–¶—É—Ü–ª–∞—Ö</Button>
                        </DialogClose>
                        </DialogFooter>
                    </DialogContent>
                </Dialog>
                <Drawer>
                    <DrawerTrigger asChild>
                        <Button variant="outline">–î—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π–≥ —Ö–∞—Ä–∞—Ö</Button>
                    </DrawerTrigger>
                    <DrawerContent
                        // Drawer –Ω—ç—ç–≥–¥—ç—Ö “Ø–µ–¥ —Ö–∏–π—Ö “Ø–π–ª–¥–ª“Ø“Ø–¥
                        onOpenAutoFocus={(event) => {
                        // “Æ–Ω–¥—Å—ç–Ω —Ñ–æ–∫—É—Å —à–∏–ª–∂–∏–ª—Ç–∏–π–≥ –∑–æ–≥—Å–æ–æ–Ω–æ
                        event.preventDefault();
                        // Drawer –¥–æ—Ç–æ—Ä—Ö —Ö“Ø—Å—Å—ç–Ω —ç–ª–µ–º–µ–Ω—Ç —Ä“Ø“Ø —Ñ–æ–∫—É—Å—ã–≥ —à–∏–ª–∂“Ø“Ø–ª–Ω—ç
                        firstInputRef.current?.focus();
                        }}
                        // Drawer —Ö–∞–∞–≥–¥–∞—Ö “Ø–µ–¥ —Ö–∏–π—Ö “Ø–π–ª–¥–ª“Ø“Ø–¥ (–∏—Ö—ç–≤—á–ª—ç–Ω Drawer-–∏–π–≥ –Ω—ç—ç—Å—ç–Ω —ç–ª–µ–º–µ–Ω—Ç —Ä“Ø“Ø —Ñ–æ–∫—É—Å—ã–≥ –±—É—Ü–∞–∞–Ω–∞)
                        onCloseAutoFocus={(event) => {
                        // –≠–Ω–¥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —Ñ–æ–∫—É—Å—ã–≥ –±—É—Ü–∞–∞—Ö—ã–≥ –∑–æ–≥—Å–æ–æ—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π –±–∞–π–∂ –±–æ–ª–Ω–æ.
                        // –•—ç—Ä—ç–≤ —Ç–∞ Drawer-–∏–π–≥ –Ω—ç—ç—Å—ç–Ω —Ç–æ–≤—á–∏–Ω –¥—ç—ç—Ä —Ñ–æ–∫—É—Å “Ø–ª–¥—ç—Ö–∏–π–≥ —Ö“Ø—Å–≤—ç–ª,
                        // vaul/radix “Ø“Ø–Ω–∏–π–≥ –∞–Ω—Ö–¥–∞–≥—á–∞–∞—Ä —Ö–∏–π–¥—ç–≥.
                        // –•—ç—Ä—ç–≤ ”©”©—Ä –≥–∞–∑–∞—Ä —Ä—É—É —à–∏–ª–∂“Ø“Ø–ª—ç—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π –±–æ–ª event.preventDefault() –∞—à–∏–≥–ª–∞–Ω–∞.
                        }}
                    >
                        <DrawerHeader>
                        <DrawerTitle>–ì–∞–∑—Ä—ã–Ω –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª</DrawerTitle>
                        <DrawerDescription>
                            –≠–Ω—ç –Ω—å —Ç—É—Ö–∞–π–Ω –≥–∞–∑—Ä—ã–Ω —Ç–∞–ª–∞–∞—Ä—Ö –Ω—ç–º—ç–ª—Ç –º—ç–¥—ç—ç–ª—ç–ª —é–º.
                        </DrawerDescription>
                        </DrawerHeader>

                        <div className="p-4 overflow-y-auto">
                        {/* –≠–Ω–¥ –∂–∏—à—ç—ç input —ç–ª–µ–º–µ–Ω—Ç. –¢–∞ “Ø“Ø–Ω–∏–π–≥ ”©”©—Ä–∏–π–Ω —ç—Ö–Ω–∏–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ —ç–ª–µ–º–µ–Ω—Ç—ç—ç—Ä —Å–æ–ª–∏–Ω–æ. */}
                        <input ref={firstInputRef} type="text" placeholder="–≠—Ö–Ω–∏–π –æ—Ä–æ–ª—Ç" className="border p-2 rounded" />
                        <p>–≠–Ω–¥ —Ç—É—Ö–∞–π–Ω –≥–∞–∑—Ä—ã–Ω –Ω—ç—Ä, –±–∞–π—Ä—à–∏–ª, “Ø–Ω—ç–ª–≥—ç—ç, –∑—É—Ä–∞–≥ –≥—ç—Ö –º—ç—Ç –º—ç–¥—ç—ç–ª–ª“Ø“Ø–¥ –±–∞–π–Ω–∞.</p>
                        </div>

                        <DrawerFooter>
                        <Button>–•–∞–¥–≥–∞–ª–∞—Ö/“Æ–∑—ç—Ö</Button>
                        <DrawerClose asChild>
                            <Button variant="outline">–•–∞–∞—Ö</Button>
                        </DrawerClose>
                        </DrawerFooter>
                    </DrawerContent>
                </Drawer>
            </section>

            <section className="space-y-4">
                <h2 className="text-xl font-semibold">üî≤ Grid</h2>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                <div className="bg-gray-200 p-4 text-center rounded">1</div>
                <div className="bg-gray-200 p-4 text-center rounded">2</div>
                <div className="bg-gray-200 p-4 text-center rounded">3</div>
                <div className="bg-gray-200 p-4 text-center rounded">4</div>
                </div>
            </section>
        </Card>
    );
}
